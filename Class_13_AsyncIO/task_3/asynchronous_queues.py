"""
–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ —á–µ—Ä–≥–∏ –∑–∞–≤–¥–∞–Ω—å –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º asyncio.Queue.
–ú—ñ—Å—Ç–∏—Ç—å –º–µ—Ö–∞–Ω—ñ–∑–º–∏ –¥–ª—è –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ–≥–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–∞ –æ–±—Ä–æ–±–∫–∏ –∑–∞–≤–¥–∞–Ω—å –∑ —Ä—ñ–∑–Ω–æ—é —à–≤–∏–¥–∫—ñ—Å—Ç—é.
"""

import asyncio


async def producer(queue: asyncio.Queue, num_consumers: int) -> None:
    """
    –í–∏—Ä–æ–±–Ω–∏–∫ –∑–∞–≤–¥–∞–Ω—å: –¥–æ–¥–∞—î 5 –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —É —á–µ—Ä–≥—É –∑ —ñ–Ω—Ç–µ—Ä–≤–∞–ª–æ–º 1 —Å–µ–∫—É–Ω–¥–∞.

    Args:
        queue (asyncio.Queue): –ß–µ—Ä–≥–∞ –¥–ª—è –æ–±–º—ñ–Ω—É –¥–∞–Ω–∏–º–∏
        num_consumers (int): –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ø–æ–∂–∏–≤–∞—á—ñ–≤ –¥–ª—è —Å–∏–≥–Ω–∞–ª—ñ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
    """
    for i in range(5):
        await asyncio.sleep(1)
        task = f"–ó–∞–≤–¥–∞–Ω–Ω—è {i + 1}"
        await queue.put(task)
        print(f"[Producer] ‚ûï –î–æ–¥–∞–Ω–æ: {task}")

    for _ in range(num_consumers):
        await queue.put(None)
    print("[Producer] üèÅ –ó–∞–≤–µ—Ä—à–∏–≤ —Ä–æ–±–æ—Ç—É")


async def consumer(queue: asyncio.Queue, consumer_id: int) -> None:
    """
    –°–ø–æ–∂–∏–≤–∞—á –∑–∞–≤–¥–∞–Ω—å: –æ–±—Ä–æ–±–ª—è—î –µ–ª–µ–º–µ–Ω—Ç–∏ –∑ —á–µ—Ä–≥–∏ –∑ —ñ–Ω—Ç–µ—Ä–≤–∞–ª–æ–º 2 —Å–µ–∫—É–Ω–¥–∏.

    Args:
        queue (asyncio.Queue): –ß–µ—Ä–≥–∞ –¥–ª—è –æ–±–º—ñ–Ω—É –¥–∞–Ω–∏–º–∏
        consumer_id (int): –£–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Å–ø–æ–∂–∏–≤–∞—á–∞
    """
    while True:
        task = await queue.get()
        if task is None:
            queue.task_done()
            print(f"[Consumer #{consumer_id}] üõë –ó—É–ø–∏–Ω–∫–∞")
            break

        print(f"\n[Consumer #{consumer_id}] ‚ö†Ô∏è –ü–æ—á–∞—Ç–æ–∫: {task}")
        await asyncio.sleep(2)  # –Ü–º—ñ—Ç–∞—Ü—ñ—è —Ç—Ä–∏–≤–∞–ª–æ—ó —Ä–æ–±–æ—Ç–∏
        print(f"[Consumer #{consumer_id}] ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: {task}")
        queue.task_done()


async def main() -> None:
    queue = asyncio.Queue(maxsize=5)  # –û–±–º–µ–∂–µ–Ω–Ω—è —á–µ—Ä–≥–∏
    consumers_count = 3

    await asyncio.gather(
        producer(queue, consumers_count),
        *(consumer(queue, i + 1) for i in range(consumers_count))
    )
    print("\n[System]: üõë –í—Å—ñ –∑–∞–≤–¥–∞–Ω–Ω—è –æ–±—Ä–æ–±–ª–µ–Ω–æ")


if __name__ == "__main__":
    asyncio.run(main())
